# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from generated.proto.text2manim.v1 import (
    worker_pb2 as text2manim_dot_v1_dot_worker__pb2,
)
import grpc.experimental

class WorkerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateManimScript = channel.unary_unary(
                '/text2manim.v1.WorkerService/GenerateManimScript',
                request_serializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimScriptRequest.SerializeToString,
                response_deserializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimScriptResponse.FromString,
                _registered_method=True)
        self.GenerateManimVideo = channel.unary_unary(
                '/text2manim.v1.WorkerService/GenerateManimVideo',
                request_serializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimVideoRequest.SerializeToString,
                response_deserializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimVideoResponse.FromString,
                _registered_method=True)


class WorkerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateManimScript(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateManimVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateManimScript': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateManimScript,
                    request_deserializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimScriptRequest.FromString,
                    response_serializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimScriptResponse.SerializeToString,
            ),
            'GenerateManimVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateManimVideo,
                    request_deserializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimVideoRequest.FromString,
                    response_serializer=text2manim_dot_v1_dot_worker__pb2.GenerateManimVideoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'text2manim.v1.WorkerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('text2manim.v1.WorkerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorkerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateManimScript(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/text2manim.v1.WorkerService/GenerateManimScript',
            text2manim_dot_v1_dot_worker__pb2.GenerateManimScriptRequest.SerializeToString,
            text2manim_dot_v1_dot_worker__pb2.GenerateManimScriptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateManimVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/text2manim.v1.WorkerService/GenerateManimVideo',
            text2manim_dot_v1_dot_worker__pb2.GenerateManimVideoRequest.SerializeToString,
            text2manim_dot_v1_dot_worker__pb2.GenerateManimVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
