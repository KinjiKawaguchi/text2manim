// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: text2manim/v1/client.proto

package text2manim_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	Text2ManimService_CreateGeneration_FullMethodName       = "/text2manim.v1.Text2ManimService/CreateGeneration"
	Text2ManimService_GetGenerationStatus_FullMethodName    = "/text2manim.v1.Text2ManimService/GetGenerationStatus"
	Text2ManimService_StreamGenerationStatus_FullMethodName = "/text2manim.v1.Text2ManimService/StreamGenerationStatus"
)

// Text2ManimServiceClient is the client API for Text2ManimService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Text2ManimServiceClient interface {
	CreateGeneration(ctx context.Context, in *CreateGenerationRequest, opts ...grpc.CallOption) (*CreateGenerationResponse, error)
	GetGenerationStatus(ctx context.Context, in *GetGenerationStatusRequest, opts ...grpc.CallOption) (*GetGenerationStatusResponse, error)
	StreamGenerationStatus(ctx context.Context, in *StreamGenerationStatusRequest, opts ...grpc.CallOption) (Text2ManimService_StreamGenerationStatusClient, error)
}

type text2ManimServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewText2ManimServiceClient(cc grpc.ClientConnInterface) Text2ManimServiceClient {
	return &text2ManimServiceClient{cc}
}

func (c *text2ManimServiceClient) CreateGeneration(ctx context.Context, in *CreateGenerationRequest, opts ...grpc.CallOption) (*CreateGenerationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateGenerationResponse)
	err := c.cc.Invoke(ctx, Text2ManimService_CreateGeneration_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *text2ManimServiceClient) GetGenerationStatus(ctx context.Context, in *GetGenerationStatusRequest, opts ...grpc.CallOption) (*GetGenerationStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetGenerationStatusResponse)
	err := c.cc.Invoke(ctx, Text2ManimService_GetGenerationStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *text2ManimServiceClient) StreamGenerationStatus(ctx context.Context, in *StreamGenerationStatusRequest, opts ...grpc.CallOption) (Text2ManimService_StreamGenerationStatusClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &Text2ManimService_ServiceDesc.Streams[0], Text2ManimService_StreamGenerationStatus_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &text2ManimServiceStreamGenerationStatusClient{ClientStream: stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Text2ManimService_StreamGenerationStatusClient interface {
	Recv() (*StreamGenerationStatusResponse, error)
	grpc.ClientStream
}

type text2ManimServiceStreamGenerationStatusClient struct {
	grpc.ClientStream
}

func (x *text2ManimServiceStreamGenerationStatusClient) Recv() (*StreamGenerationStatusResponse, error) {
	m := new(StreamGenerationStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Text2ManimServiceServer is the server API for Text2ManimService service.
// All implementations must embed UnimplementedText2ManimServiceServer
// for forward compatibility
type Text2ManimServiceServer interface {
	CreateGeneration(context.Context, *CreateGenerationRequest) (*CreateGenerationResponse, error)
	GetGenerationStatus(context.Context, *GetGenerationStatusRequest) (*GetGenerationStatusResponse, error)
	StreamGenerationStatus(*StreamGenerationStatusRequest, Text2ManimService_StreamGenerationStatusServer) error
	mustEmbedUnimplementedText2ManimServiceServer()
}

// UnimplementedText2ManimServiceServer must be embedded to have forward compatible implementations.
type UnimplementedText2ManimServiceServer struct {
}

func (UnimplementedText2ManimServiceServer) CreateGeneration(context.Context, *CreateGenerationRequest) (*CreateGenerationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGeneration not implemented")
}
func (UnimplementedText2ManimServiceServer) GetGenerationStatus(context.Context, *GetGenerationStatusRequest) (*GetGenerationStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenerationStatus not implemented")
}
func (UnimplementedText2ManimServiceServer) StreamGenerationStatus(*StreamGenerationStatusRequest, Text2ManimService_StreamGenerationStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamGenerationStatus not implemented")
}
func (UnimplementedText2ManimServiceServer) mustEmbedUnimplementedText2ManimServiceServer() {}

// UnsafeText2ManimServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Text2ManimServiceServer will
// result in compilation errors.
type UnsafeText2ManimServiceServer interface {
	mustEmbedUnimplementedText2ManimServiceServer()
}

func RegisterText2ManimServiceServer(s grpc.ServiceRegistrar, srv Text2ManimServiceServer) {
	s.RegisterService(&Text2ManimService_ServiceDesc, srv)
}

func _Text2ManimService_CreateGeneration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGenerationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Text2ManimServiceServer).CreateGeneration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Text2ManimService_CreateGeneration_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Text2ManimServiceServer).CreateGeneration(ctx, req.(*CreateGenerationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Text2ManimService_GetGenerationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGenerationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Text2ManimServiceServer).GetGenerationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Text2ManimService_GetGenerationStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Text2ManimServiceServer).GetGenerationStatus(ctx, req.(*GetGenerationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Text2ManimService_StreamGenerationStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamGenerationStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Text2ManimServiceServer).StreamGenerationStatus(m, &text2ManimServiceStreamGenerationStatusServer{ServerStream: stream})
}

type Text2ManimService_StreamGenerationStatusServer interface {
	Send(*StreamGenerationStatusResponse) error
	grpc.ServerStream
}

type text2ManimServiceStreamGenerationStatusServer struct {
	grpc.ServerStream
}

func (x *text2ManimServiceStreamGenerationStatusServer) Send(m *StreamGenerationStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

// Text2ManimService_ServiceDesc is the grpc.ServiceDesc for Text2ManimService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Text2ManimService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "text2manim.v1.Text2ManimService",
	HandlerType: (*Text2ManimServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGeneration",
			Handler:    _Text2ManimService_CreateGeneration_Handler,
		},
		{
			MethodName: "GetGenerationStatus",
			Handler:    _Text2ManimService_GetGenerationStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamGenerationStatus",
			Handler:       _Text2ManimService_StreamGenerationStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "text2manim/v1/client.proto",
}
